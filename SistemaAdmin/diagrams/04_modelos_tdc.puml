@startuml Modelos_TDC_SIGE
!theme plain
title Tipos de Datos Concretos (TDCs) - Modelos del Sistema

package "Entidades Principales" {

    class "Estudiante" as Estudiante {
        -id: ?int
        -dni: string
        -nombre: string
        -apellido: string
        -fechaNacimiento: ?DateTime
        -grupoSanguineo: ?string
        -obraSocial: ?string
        -domicilio: ?string
        -telefonoFijo: ?string
        -telefonoCelular: ?string
        -email: ?string
        -cursoId: ?int
        -activo: bool
        --
        +__construct(dni: string, nombre: string, apellido: string)
        +getId(): ?int
        +getDni(): string
        +getNombre(): string
        +getApellido(): string
        +getNombreCompleto(): string
        +getFechaNacimiento(): ?DateTime
        +getEdad(): int
        +esActivo(): bool
        +setCurso(cursoId: int): void
        +validarDni(): bool
    }

    class "Profesor" as Profesor {
        -id: ?int
        -dni: string
        -nombre: string
        -apellido: string
        -especialidad: ?string
        -telefono: ?string
        -email: ?string
        -activo: bool
        --
        +__construct(dni: string, nombre: string, apellido: string)
        +getId(): ?int
        +getNombreCompleto(): string
        +getEspecialidad(): ?string
        +esActivo(): bool
        +setEspecialidad(especialidad: string): void
    }

    class "Nota" as Nota {
        -id: ?int
        -estudianteId: int
        -materiaId: int
        -valor: float
        -bimestre: string
        -fecha: DateTime
        -observaciones: ?string
        --
        +__construct(estudianteId: int, materiaId: int, valor: float, bimestre: string)
        +getId(): ?int
        +getValor(): float
        +getBimestre(): string
        +getFecha(): DateTime
        +esAprobada(): bool
        +getConcepto(): string
        +validarValor(valor: float): bool
    }

    class "LlamadoAtencion" as Llamado {
        -id: ?int
        -estudianteId: int
        -fecha: DateTime
        -motivo: string
        -descripcion: string
        -sancion: ?string
        -usuarioId: int
        --
        +__construct(estudianteId: int, motivo: string, descripcion: string)
        +getId(): ?int
        +getFecha(): DateTime
        +getMotivo(): string
        +getDescripcion(): string
        +getSancion(): ?string
        +setSancion(sancion: string): void
        +esReciente(): bool
    }

    class "Curso" as Curso {
        -id: ?int
        -anio: int
        -division: string
        -especialidadId: ?int
        -turnoId: ?int
        -activo: bool
        --
        +__construct(anio: int, division: string)
        +getId(): ?int
        +getAnio(): int
        +getDivision(): string
        +getNombreCompleto(): string
        +esActivo(): bool
        +setEspecialidad(especialidadId: int): void
        +setTurno(turnoId: int): void
    }

    class "Materia" as Materia {
        -id: ?int
        -nombre: string
        -codigo: ?string
        -horasSemanales: ?int
        -especialidadId: ?int
        -activo: bool
        --
        +__construct(nombre: string)
        +getId(): ?int
        +getNombre(): string
        +getCodigo(): ?string
        +getHorasSemanales(): ?int
        +esActiva(): bool
        +setCodigo(codigo: string): void
    }
}

package "Excepciones Personalizadas" {

    class "EstudianteNoEncontradoException" as EstExcep {
        +__construct(id: int)
        +getEstudianteId(): int
    }

    class "CalificacionInvalidaException" as NotaExcep {
        +__construct(valor: float)
        +getValorInvalido(): float
    }

    class "ProfesorNoEncontradoException" as ProfExcep {
        +__construct(id: int)
        +getProfesorId(): int
    }

    class "CursoNoEncontradoException" as CursoExcep {
        +__construct(id: int)
        +getCursoId(): int
    }
}

' Relaciones entre entidades
Estudiante ||--o{ Nota : "tiene"
Estudiante ||--o{ Llamado : "recibe"
Estudiante }o--|| Curso : "pertenece"
Profesor ||--o{ Nota : "evalúa"
Curso ||--o{ Materia : "incluye"

' Excepciones
Nota ..> NotaExcep : "lanza si valor inválido"
Estudiante ..> EstExcep : "lanza si no encontrado"
Profesor ..> ProfExcep : "lanza si no encontrado"
Curso ..> CursoExcep : "lanza si no encontrado"

' Notas sobre los TDCs
note right of Estudiante : "TDC robusto con:\n- Validaciones internas\n- Métodos de negocio\n- Inmutabilidad parcial"
note right of Nota : "Validación automática:\n- Valor entre 0-10\n- Bimestre válido\n- Fecha automática"
note right of Llamado : "Registro inmutable:\n- Fecha automática\n- Usuario obligatorio\n- Motivo requerido"

@enduml
